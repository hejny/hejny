.item {
    /*/
    outline: 1px dotted red;
    /**/

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: min-content min-content min-content;
    align-items: stretch;
    justify-content: stretch;

    /*margin: 10px;*/
}

.item .imageContainer {
    /*/
    outline: 1px dotted red;
    /**/

    z-index: 1;
    order: 1;

    grid-column: 1 / span 1;
    grid-row: 1 / span 1;

    aspect-ratio: 3 / 2 /* <- TODO: Correct aspect? */;

    margin: -0px;
}

.item .imageContainer img {
    width: 100%;
    height: auto;
}

.item .imageContainer div[style*='background-image'] {
    background-size: 100% 100%;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    width: 100%;
    height: 100%;

    /* transition: all 2s ease-in-out /* <- TODO: Unite transition effects ACRY */
}

.item .personImageContainer {
    /*/
    outline: 1px dotted red;
    /**/

    z-index: 1;
    order: 1;

    grid-column: 1 / span 1;
    grid-row: 1 / span 1;

    aspect-ratio: 1 / 1;

    margin: 30px;
    margin-bottom: 0;
    border-radius: 50px /* <- TODO: [0] why this needs to be here 2x to propperly work? */;

    box-shadow: #00000077 -25px 25px 0px; /* <- TODO: Paralax effect on shadow */
}

.item .personImageContainer img {
    /*/
    outline: 1px dotted red;
    /**/

    width: 100%;
    height: 100%;
    border-radius: 50px /* <- TODO: [0] why this needs to be here 2x to propperly work? */;

    background-image: radial-gradient(circle at center, #b4952c 0%, #000000 120%)
        /* <- TODO: [ðŸ’«] What is the propper place for this radial-gradient, in JSX or in CSS module + DRY */;

    object-fit: cover;
}

/*
.item:hover .imageContainer div[style*='background-image'] {
    background-size: 200% 200%;
}
*/

.item .overlay {
    /*/
    outline: 1px dotted red;
    /**/

    z-index: 2;
    order: 2;

    grid-column: 1 / span 1;
    grid-row: 1 / span 1;

    background-color: rgba(0, 0, 0, 0.37);
    transition: all 0.2s ease-in-out;
}

.item .title {
    /*/
    outline: 1px dotted blue;
    /**/

    z-index: 1;
    order: 1;

    grid-column: 1 / span 1;

    font-size: 30px;
    margin-top: -7px;
}

.item .floatingTitle {
    /*/
    outline: 1px dotted blue;
    /**/

    z-index: 3;
    order: 3;

    grid-column: 1 / span 1;
    grid-row: 1 / span 1;

    display: flex;
    align-items: center;
    justify-content: center;

    pointer-events: none;
}

.item .floatingTitle .inner {
    /*/
    outline: 1px dotted blue;
    /**/

    padding: 5px;
    border-radius: 5px /* <- TODO: Unite border-radius ACRY*/;
    font-size: 30px;
    /*background-color: rgba(56, 74, 150, 0.486); <- TODO: Unite glass effect ACRY */

    backdrop-filter: blur(10px) /* <- TODO: Unite glass effect ACRY */;

    transition: all 0.3s ease-in-out /* <- TODO: Unite transition effects ACRY */;
    opacity: 0.9;
}

/*
.item:hover .overlay {
    background-color: rgba(0, 0, 0, 0);
    pointer-events: none;
}
*/

.item:hover .floatingTitle .inner {
    background-color: rgba(0, 0, 0, 0);
    opacity: 0;
    transform: scale(120%);
}

.item .description {
    /*/
    outline: 1px dotted yellow;
    /**/

    z-index: 3;
    order: 3;

    grid-column: 1 / span 1;

    text-align: left;
    padding-left: 25px;
    padding-right: 25px;

    font-size: 15px;
    transition: color 0.3s ease-in-out /* <- TODO: Unite transition effects ACRY */;
}

.item .description p:not(:last-child) {
    /*/
    outline: 1px dotted yellow;
    /**/

    margin-bottom: 10px;
}

.item:hover .description {
    /* TODO: Also the outline image should be highlighted */
    color: var(--highlighted-text-color);
}

.item .description a::before {
    content: ' ';
}

.item .description a::after {
    content: ' ';
}
